spring.application.name=despliegue-api-rest

# Configuración para la base de datos local MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/pets?useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configuración para la base de datos en Neon
#spring.datasource.url=jdbc:postgresql://ep-tiny-bonus-ad7w19zt-pooler.c-2.us-east-1.aws.neon.tech:5432/pets?sslmode=require&channelBinding=require
#spring.datasource.username=neondb_owner
#spring.datasource.password=npg_YXLl1e5RiPzt

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=true

# 1. Configuración de la URL de la Base de Datos
spring.datasource.url=jdbc:postgresql://localhost:5433/pets

# 2. Credenciales
# Deben coincidir con las variables POSTGRES_USER y POSTGRES_PASSWORD de docker-compose.yml.
spring.datasource.username=usuario_app
spring.datasource.password=clave_app

# 3. Driver de PostgreSQL
# Asegura que Spring sepa qué driver usar.
spring.datasource.driver-class-name=org.postgresql.Driver

# 4. (Opcional) Configuración de Dialecto JPA/Hibernate
# Esto depende de tu aplicación, pero es estándar para PostgreSQL.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate 
spring.jpa.show-sql=true